@model MBBVL.Models.WrapperModel

@{
    ViewBag.Title = "Order";
}

<script src="~/js/NewRows.js"></script>
<style>
    .table {
        max-width: none;
        table-layout: fixed;
        word-wrap: break-word;
    }
</style>
<h2>Order</h2>
@using (Html.BeginForm("SubmitOrder", "Home")) {
    @Html.ValidationSummary(false)
    <form class="form-horizontal">
       
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Oligonucleotide Order Form</h3>
            </div>
            <div class="panel-body">
                <fieldset>
                    <legend>Oligonucleotide Order Form</legend>

                    <div class="col-lg-3">

                        <div class="form-group row">
                            <div class="col-lg-10">
                                <input type="text" id="Onum" name="oNum">

                                <input class="img-rounded" type="button" name="Command" id="btnAdd" value="Add more rows" />
                            </div>
                        </div>
                    </div>

                </fieldset>
                <table class="panel-body" id="addRow">
                 
                    <thead>
                        <tr>
                            <th>Primer Name</th>
                            <th>QTY</th>
                            <th>Oligonucleotide Sequence</th>
                            <th>Synthesis Scale1(μmole)</th>
                            <th>GMP2(Y/N)</th>
                            <th>Modification</th>
                            <th>Final Delivery Form3</th>
                            <th>Purification4</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.MakeCount != null) {
                            for (int i = 0; i < ViewBag.MakeCount; i++) {
                                <tr>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].PrimerName, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].Qty, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].OligonucleotideSequence, new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.oligosequence[i].SynthesisScale1, new SelectList(ViewBag.Synthesis, "Value", "Text"), new { @class = "form-control" })</td>
                                    <td>@Html.CheckBoxFor(m => m.oligosequence[i].GMP2, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].Modification, new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.oligosequence[i].FinalDeliveryForm, new SelectList(ViewBag.FinalDelivery, "Value", "Text"), new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.oligosequence[i].Purification, new SelectList(ViewBag.Purification, "Value", "Text"), new { @class = "form-control" })</td>
                                </tr>
                            }
                        } else {
                            for (int i = 0; i < 1; i++) {
                                <tr>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].PrimerName, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].Qty, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].OligonucleotideSequence, new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.oligosequence[i].SynthesisScale1, new SelectList(ViewBag.Synthesis, "Value", "Text"), new { @class = "form-control" })</td>
                                    <td>@Html.CheckBoxFor(m => m.oligosequence[i].GMP2, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(m => m.oligosequence[i].Modification, new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.oligosequence[i].FinalDeliveryForm, new SelectList(ViewBag.FinalDelivery, "Value", "Text"), new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.oligosequence[i].Purification, new SelectList(ViewBag.Purification, "Value", "Text"), new { @class = "form-control" })</td>
                                </tr>
                            }
                        }

                </table>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Shipping Info</h3>
            </div>
            <div class="panel-body">
                <fieldset>
                    <legend></legend>
                    <div class="control-group">
                        @Html.LabelFor(m => m.shipping.Date, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.shipping.Date, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.shipping.FullName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.shipping.FullName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.shipping.Institution, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.shipping.Institution, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.shipping.ShippingAddress, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.shipping.ShippingAddress, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.shipping.Phone, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.shipping.Phone, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.shipping.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.shipping.Email, new { @class = "form-control" })
                        </div>
                    </div>

                </fieldset>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Billing Information</h3>
            </div>
            <div class="panel-body">
                <div class="tab-pane" id="profile">
                    <fieldset>
                        <div class="control-group">
                            @Html.LabelFor(m => m.billing.Quotenumber, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.billing.Quotenumber, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.billing.FullName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.billing.FullName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.billing.Institution, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.billing.Institution, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.billing.BillingAddress, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.billing.BillingAddress, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.billing.Phone, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.billing.Phone, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.billing.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.billing.Email, new { @class = "form-control" })
                            </div>
                        </div>

                    </fieldset>
                </div>
            </div>
        </div>
       
        <input type="submit" class="btn btn-lg btn-primary" name="btnConfirm" value="Submit" />
    </form>
}
